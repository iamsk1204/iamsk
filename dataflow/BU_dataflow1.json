{
	"name": "BU_dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Orgs",
						"type": "DatasetReference"
					},
					"name": "BU"
				},
				{
					"dataset": {
						"referenceName": "NEW_LE",
						"type": "DatasetReference"
					},
					"name": "LE"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DataflowOutput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "RemoveColumns1",
					"description": "Autogenerated by data preview actions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Lead as string,",
				"          BU as string,",
				"          {BU Description} as string,",
				"          {Char. Count Cannot Be More Than 30} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> BU",
				"source(output(",
				"          Lead as string,",
				"          LE as string,",
				"          {LE Description} as string,",
				"          {Comments (OK in Mercury)} as string,",
				"          {Char. Count Cannot Be More Than 30} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> LE",
				"BU, LE join(BU@Lead == LE@Lead,",
				"     joinType:'inner',",
				"     partitionBy('hash', 1),",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          BU,",
				"          {BU Description},",
				"          Lead,",
				"          LE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveColumns1",
				"RemoveColumns1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Lead as string,",
				"          BU as string,",
				"          {BU Description} as string,",
				"          {Char. Count Cannot Be More Than 30} as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}